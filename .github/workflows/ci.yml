name: 🔄 Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # Quality checks
  quality:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: 🔍 Run ESLint
      run: npm run lint
      
    - name: 🏗️ Type check
      run: npx tsc --noEmit
      
    - name: 📊 Check bundle size
      run: npm run build
      
  # Security checks
  security:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: 🔒 Run npm audit
      run: npm audit --audit-level=high
      continue-on-error: true
      
    - name: 🛡️ Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      if: false # Disable for now, enable when you have SARIF setup
      with:
        sarif-file: 'security-scan-results.sarif'

  # Tests
  test:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: 🧪 Run tests
      run: npm test
      
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: false # Enable when you set up Codecov
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  # Build test
  build:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: 🏗️ Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL || 'https://placeholder.supabase.co' }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY || 'placeholder-key' }}
        
    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: dist/
        retention-days: 7

  # Accessibility tests
  accessibility:
    name: ♿ Accessibility Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: 🏗️ Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: 'https://placeholder.supabase.co'
        VITE_SUPABASE_ANON_KEY: 'placeholder-key'
        
    - name: ♿ Run accessibility tests
      run: |
        npx serve -s dist -p 3000 &
        sleep 5
        npx @axe-core/cli http://localhost:3000 --exit
      continue-on-error: true

  # Performance audit
  lighthouse:
    name: 🚀 Performance Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: 🏗️ Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: 'https://placeholder.supabase.co'
        VITE_SUPABASE_ANON_KEY: 'placeholder-key'
        
    - name: 🚀 Run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        npx serve -s dist -p 3000 &
        sleep 5
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      continue-on-error: true

  # All checks passed
  all-checks:
    name: ✅ All Checks Passed
    runs-on: ubuntu-latest
    needs: [quality, security, test, build, accessibility, lighthouse]
    
    steps:
    - name: ✅ All checks passed
      run: echo "🎉 All quality checks passed successfully!"